@using MachinePark.Entities
@using MachinePark.Service
@using static MachinePark.Service.MachineStorageService
@inject PageManager PageManager

@inject MachineStorageService MachineStorageService



<h3>MachineList</h3>
<table class="table">
    <thead>
        <tr>
            <th>
                @nameof(Machine.SerialNumber)
            </th>
            <th>
                @nameof(Machine.Id)
            </th>
            <th>
                @nameof(Machine.MachineType)
            </th>
            <th>
                @nameof(Machine.ParkingSpot)
            </th>
            <th>
                @nameof(Machine.IsRunning)
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var machine in machineList) {
            <tr>
                <td>
                    @machine.SerialNumber
                </td>
                <td>
                    @machine.Id
                </td>
                <td>
                    @machine.MachineType
                </td>
                <td>
                    @machine.ParkingSpot
                </td>
                <td>
                    @if (machine.IsRunning)
                    {
                        <span class="badge text-bg-success">Active</span>
                    }
                    else{

                        <h5><span class="badge bg-danger p-1" >Inactive</span></h5>
                    }
                </td>
                <td><a class="bi bi-pencil-square" onclick="@(()=>setSelectedMachine(machine.Id))" href="/Edit"></a></td>
            </tr>
        }
    </tbody>
</table>

@* Todo: add pagination
    <div class="input-group">
    <button class="btn btn-outline-secondary" type="button"> &lt</button> 
    <span>@CurrentPage / @GetPageCount()</span>
    <button class="btn btn-outline-secondary" type="button">&gt</button>
</div> *@
@code {
    // [Parameter]
    // public int CurrentPage { get; set; } = 1;
    // public int PageSize = 5;

    private IEnumerable<Machine> machineList=> MachineStorageService.MachineGarage;


    protected override void OnInitialized()
    {
        MachineStorageService.OnChange += StateHasChanged;
    }
    // private IEnumerable<Machine> GetPage(){
    //     return machineList.Skip(CurrentPage * PageSize).Take(PageSize);
    // }

    // public int GetPageCount(){
    //     return machineList.Count() / PageSize;
    // }

    private void setSelectedMachine(int id){
        PageManager.SetSelected(id);
    }



    public void Dispose(){
        MachineStorageService.OnChange -= StateHasChanged;
    }

}
